name: Backend CI/CD

on:
  push:
    branches:
      - main
jobs:
  Test-y-Linter:
    runs-on: ubuntu-latest

    steps:
      # Configurar el entorno
      - name: Checkea el repositorio
        uses: actions/checkout@v4

      # Configurar Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Instalar dependencias
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest ruff

      # Ejecutar el linter Ruff
      - name: Run Ruff Linter
        run: |
          source .venv/bin/activate
          ruff check .

      # Ejecutar pruebas con pytest
      - name: Run Pytest
        run: |
          source .venv/bin/activate
          pytest -v -p no:warnings
  Crear-Docker-imagen:
    name: Crear Docker imagen
    runs-on: ubuntu-latest  
    needs: Test-y-Linter
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: seglion/pythonback

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true





